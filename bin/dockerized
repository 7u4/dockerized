#!/usr/bin/env bash
echo "Running dockerized"
DOCKERIZED_ENV_FILE_NAME="dockerized.env"
DOCKERIZED_ROOT=$(realpath $(dirname "$BASH_SOURCE")/..)
DOCKERIZED_COMPOSE_FILE="${DOCKERIZED_ROOT}/docker-compose.yml"
DOCKERIZED_ENV_FILE="${DOCKERIZED_ROOT}/${DOCKERIZED_ENV_FILE_NAME}"

HOST_HOME="$HOME"
case "$(uname -s)" in
CYGWIN* | MINGW32* | MSYS* | MINGW*)
  HOST_PWD=$(pwd -W)
  ;;
*)
  HOST_PWD=$(pwd)
  ;;
esac

function dotenv() {
  FILE="$1"
  set -o allexport
  source $FILE
  set +o allexport
}

function findUp() {
  echo "Findup"
  local FILE="$1"
  local DIR="$2"
  echo "Finding $FILE in $DIR"
  while [ ! -f "$DIR/$FILE" ]; do
    DIR=$(dirname "$DIR")
    # if realpath of parent dir is same as realpath of current dir, then we are at root
    if [ "$(realpath "$DIR")" == "$(realpath "$(dirname "$DIR")")" ]; then
      echo "File not found: $FILE"
      return 1
    fi
  done
  echo "$DIR/$FILE"
}

function loadEnvironment() {
  echo "Loading environment from $DOCKERIZED_ENV_FILE_NAME"
  findUp "$DOCKERIZED_ENV_FILE_NAME" "$HOST_PWD"
  local CUSTOM_ENV_FILE=$(findUp "$DOCKERIZED_ENV_FILE_NAME" "$HOST_PWD")
  if [ -f "$CUSTOM_ENV_FILE" ]; then
    dotenv "$CUSTOM_ENV_FILE"
  fi
}

function dc() {
  docker-compose -f $DOCKERIZED_ROOT/docker-compose.yml "$@"
}

function dockerized() {
  _dc run --rm -w //host -v "$HOST_PWD://host" "$@"
}

loadEnvironment
